{"mappings":"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","sources":["src/js/month.js","src/js/mobile-menu.js","src/js/activMenu.js","src/js/weekly.js"],"sourcesContent":["\n// import axios from 'axios';\nimport {fetchAllGet} from './fetchAllGet';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/w500/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nfetchAllGet(BASE_UPCOMING_URL, ENDPOINT_UPCOMING, API_KEY,'&language=en-US&page=1')\n.then(markUp);\n\nasync function genreStr(arr){\n        const data = await respGenre;\n        return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0].name).join(' ');\n      \n }\n\nasync function markUp(data){\n    \n    const randCard = Math.floor(Math.random() * 20);\n    data.data.results.map(async ({backdrop_path, poster_path, title, original_title, id, release_date, vote_average, vote_count, popularity, overview, genre_ids},i)=>{\n        // <img src=\"${BASE_IMG_URL}${backdrop_path}\" alt=\"${original_title}\" width=\"805\">\n        if (i===randCard)\n        {\n            const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div>\n                            <div class=\"month-item-title\">\n                                <h3>${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3>Release date<span class=\"month-rel-date\">${release_date.replaceAll('-','.')}</span></h3>\n                                        <h3>Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count }</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3>Popularity<span class=\"month-popular\">${parseFloat(popularity).toFixed(1)}</span></h3>\n                                        <h3>Genre<span class=\"month-genre\">${await genreStr(genre_ids)}</span></h3>\n                                    </div>\n                                </div>\n                                <p>About</p><span class=\"month-text\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn\">${textBtn(id)}</button>\n                            </div>\n                         </div>`;\n            refs.monthGalery.insertAdjacentHTML('beforeend', str);\n            refs.monthBtn = document.querySelector('.month-btn');\n            refs.monthItem = document.querySelector('.month-item');\n            refs.monthBtn.addEventListener('click', handlerBtn);\n        }\n    });\n      \n}\n\nfunction textBtn(id){\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    return !idFilm.id.includes(id.toString()) ? 'Add to my library' : 'Remove from my library';\n}\n\nfunction handlerBtn(e){\n    e.preventDefault();\n    const id = refs.monthItem.getAttribute('id');\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    if(!idFilm.id.includes(id)){\n        if(e.currentTarget.textContent === 'Add to my library'){e.currentTarget.textContent = 'Remove from  my library';}\n        idFilm.id.push(id);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n    }else {\n        idFilm.id.splice(idFilm.id.indexOf(id),1);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n        e.currentTarget.textContent = 'Add to my library';\n    }\n    \n    \n}","import {refs} from './refs';\n\nrefs.menuBtn.addEventListener('click', toglrModal);\nrefs.menuBackdrop.addEventListener('click', closeModal);\n\nfunction closeModal(ev) {\n  if (ev.target === refs.menuBackdrop) {\n    toglrModal();\n  }\n}\n\nfunction toglrModal() {\n  refs.menuBackdrop.classList.toggle('visual_hidden');\n  refs.menuContainer.classList.toggle('is-open');\n  refs.body.classList.toggle('is-open');\n}\n","const navHeader = document.getElementById('nav-header');\nconst currentPath = window.location.pathname;\n\nif (currentPath === '/project-neverland/index.html') {\n  navHeader.children[0].children[0].classList.add('nav_list-current');\n} else if (currentPath === '/project-neverland/catalog.html') {\n  navHeader.children[1].children[0].classList.add('nav_list-current');\n} else if (currentPath === '/project-neverland/library.html') {\n  navHeader.children[2].children[0].classList.add('nav_list-current');\n} else {\n  navHeader.children[0].children[0].classList.add('nav_list-current');\n}\n","import axios from 'axios';\nimport { createMarkupCard } from './createMarkupCard';\nimport { refs } from './refs';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nlet originalData = [];\n\nasync function fetchTrendsOfWeek() {\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&per_page=20`\n  );\n  originalData = response.data.results;\n  await handleResponsive();\n  window.addEventListener('resize', handleResponsive);\n  return originalData;\n}\n\nasync function handleResponsive() {\n  const screenWidth = window.innerWidth;\n  let slicedData;\n\n  if (screenWidth < 768) {\n    slicedData = originalData.slice(0, 1);\n  } else {\n    slicedData = originalData.slice(0, 3);\n  }\n\n  refs.weeklyList.innerHTML = createMarkupCard(slicedData);\n}\n\nfetchTrendsOfWeek();\n\nexport { fetchTrendsOfWeek };\n"],"names":["$h4A4X","parcelRequire","$46a31d57eb81e4f1$var$respGenre","fetchAllGet","$46a31d57eb81e4f1$var$handlerBtn","e","preventDefault","id","$krGWQ","refs","monthItem","getAttribute","idFilm","localStorage","getItem","JSON","parse","includes","splice","indexOf","setItem","stringify","currentTarget","textContent","push","$01a0d922e623affe$var$toglrModal","menuBackdrop","classList","toggle","menuContainer","body","then","async","data","randCard","Math","floor","random","results","map","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","i","str","replaceAll","parseFloat","toFixed","arr","el","genres","filter","name","join","$46a31d57eb81e4f1$var$genreStr","toString","$46a31d57eb81e4f1$var$textBtn","monthGalery","insertAdjacentHTML","monthBtn","document","querySelector","addEventListener","menuBtn","ev","target","$90eea1ec9ba71f5d$var$navHeader","getElementById","$90eea1ec9ba71f5d$var$currentPath","window","location","pathname","children","add","$2shzp","$c10c282de78da56f$var$originalData","$c10c282de78da56f$var$handleResponsive","slicedData","innerWidth","slice","weeklyList","innerHTML","$ahwPh","createMarkupCard","response","default","get","$c10c282de78da56f$export$93a1f08ed04db2b3"],"version":3,"file":"index.7e3859c4.js.map"}