{"mappings":"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","sources":["src/js/month.js","src/js/weekly.js"],"sourcesContent":["\n// import axios from 'axios';\nimport {fetchAllGet} from './fetchAllGet';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/w500/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nif (localStorage.getItem(\"theme\")){\n    const root = document.querySelector(':root');\n    root.style.setProperty('--primary-title-color', '#111111');\n    root.style.setProperty('--primary-vote-color', '#111111');\n    root.style.setProperty('--primary-vote-color-text', '#282828');\n    root.style.setProperty('--primary-about-text', '#282828');\n} \n\nfetchAllGet(BASE_UPCOMING_URL, ENDPOINT_UPCOMING, API_KEY,'&language=en-US&page=1')\n.then(markUp);\n\nasync function genreStr(arr){\n        const data = await respGenre;\n        return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0].name).join(', ');\n      \n }\n\nasync function markUp(data){\n    \n    const randCard = Math.floor(Math.random() * 20);\n    data.data.results.map(async ({backdrop_path, poster_path, title, original_title, id, release_date, vote_average, vote_count, popularity, overview, genre_ids},i)=>{\n        if (i===randCard)\n        {\n            \n            const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div>\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div></div>\n                            <div class=\"month-item-title\">\n                                <h3>${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3>Release date<span class=\"month-rel-date\">${release_date.replaceAll(\n                                          '-',\n                                          '.'\n                                        )}</span></h3>\n                                        <h3>Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count}</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3>Popularity<span class=\"month-popular\">${parseFloat(\n                                          popularity\n                                        ).toFixed(1)}</span></h3>\n                                        <h3>Genre<span class=\"month-genre\">${await genreStr(\n                                          genre_ids\n                                        )}</span></h3>\n                                    </div>\n                                </div>\n                                <p>About</p><span class=\"month-text\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn button-light\">${textBtn(\n                                  id\n                                )}</button>\n                            </div>\n                         </div>`;\n                        \n            refs.monthGalery.insertAdjacentHTML('beforeend', str);\n            refs.monthBtn = document.querySelector('.month-btn');\n            refs.monthItem = document.querySelector('.month-item');\n            refs.monthBtn.addEventListener('click', handlerBtn);\n            \n        }\n    });\n      \n}\n\nfunction textBtn(id){\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    return !idFilm.id.includes(id.toString()) ? 'Add to my library' : 'Remove from my library';\n}\n\nfunction handlerBtn(e){\n    e.preventDefault();\n    const id = refs.monthItem.getAttribute('id');\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    if(!idFilm.id.includes(id)){\n        if(e.currentTarget.textContent === 'Add to my library'){e.currentTarget.textContent = 'Remove from  my library';}\n        idFilm.id.push(id);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n    }else {\n        idFilm.id.splice(idFilm.id.indexOf(id),1);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n        e.currentTarget.textContent = 'Add to my library';\n    }\n    \n    \n}","import axios from 'axios';\n// import { createMarkupCard } from './createMarkupCard';\nimport { refs } from './refs';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nlet originalData = [];\nconst randomIndex = Math.floor(Math.random() * 100);\n\nasync function fetchTrendsOfWeek() {\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=${randomIndex}`\n  );\n  console.log(randomIndex);\n  originalData = response.data.results;\n  handleResponsive();\n\n  return originalData;\n}\n// window.addEventListener('resize', handleResponsive);\nfunction handleResponsive() {\n  const screenWidth = window.innerWidth;\n  let slicedData = [];\n  console.log(slicedData);\n  // if (screenWidth < 768) {\n  //   return (slicedData = originalData.slice(0, 1));\n  // }\n  // slicedData = originalData.slice(0, 3);\n  slicedData = originalData.slice(0, 3);\n  createMarkupCard(slicedData);\n}\n\nfetchTrendsOfWeek();\n\nexport { fetchTrendsOfWeek };\n\nfunction createMarkupCard(cardresult) {\n  const cardMarkUp = cardresult\n    .map(\n      ({\n        original_title,\n        poster_path,\n        vote_average,\n        genre_ids,\n        release_date,\n        id,\n      }) =>\n        `<a href=\"#\" class=\"card-film\" id=\"${id}\">\n        <div class=\"card-backdrop\"></div>\n        <img\n          class=\"card-img\"\n          src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n          alt=\"\"\n          loading=\"lazy\"\n          srcset=\"\n            https://image.tmdb.org/t/p/w500${poster_path} 1x,\n            https://image.tmdb.org/t/p/w500${poster_path} 2x\n          \"\n        />\n        <div class=\"card-info-section\">\n          <h3 class=\"card-info-title\">${original_title}</h3>\n          <div class=\"card-info\">\n            <p class=\"card-info-text\">\n              ${String(release_date).slice(0, 4)} | ${genre_ids}\n            </p>\n            <ul class=\"card-vote\">\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </a>`\n    )\n    .join('');\n\n  refs.weeklyList.insertAdjacentHTML('beforeend', cardMarkUp);\n}\n"],"names":["$h4A4X","parcelRequire","$46a31d57eb81e4f1$var$respGenre","fetchAllGet","localStorage","getItem","root","document","querySelector","style","setProperty","$46a31d57eb81e4f1$var$handlerBtn","e","preventDefault","id","$krGWQ","refs","monthItem","getAttribute","idFilm","JSON","parse","includes","splice","indexOf","setItem","stringify","currentTarget","textContent","push","then","async","data","randCard","Math","floor","random","results","map","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","i","str","replaceAll","parseFloat","toFixed","arr","el","genres","filter","name","join","$46a31d57eb81e4f1$var$genreStr","toString","$46a31d57eb81e4f1$var$textBtn","monthGalery","insertAdjacentHTML","monthBtn","addEventListener","$2shzp","$c10c282de78da56f$var$originalData","$c10c282de78da56f$var$randomIndex","response","default","get","console","log","window","innerWidth","slicedData","slice","cardresult","cardMarkUp","String","weeklyList","$c10c282de78da56f$var$createMarkupCard","$c10c282de78da56f$var$handleResponsive","$c10c282de78da56f$export$93a1f08ed04db2b3"],"version":3,"file":"index.90bc6cfc.js.map"}