{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-1bcbd807fedf690e.js","src/index.js","src/js/month.js","src/js/weekly.js","node_modules/@parcel/runtime-js/lib/runtime-555eb7fbb66441c4.js","node_modules/@parcel/runtime-js/lib/runtime-ebd8098654bbbb6b.js","node_modules/@parcel/runtime-js/lib/runtime-9041f4e173702076.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.665bb4c1.js\\\",\\\"k0qvN\\\":\\\"reitingfull.b145141b.svg\\\",\\\"bLI2f\\\":\\\"reitinghalf.68072f94.svg\\\",\\\"kzUqJ\\\":\\\"reitingzero.83703bb2.svg\\\",\\\"eunLf\\\":\\\"catalog.65ed4ca5.css\\\",\\\"7adTC\\\":\\\"library.fea0bf49.js\\\"}\"));","import './js/pre-loader-spinner';\nimport './js/month';\nimport './js/hero';\nimport './js/mobile-menu';\nimport './js/activMenu';\nimport './js/theme-switcher';\nimport './js/weekly';\nimport './js/modal-trailer';\nimport './js/modal-footer';\nimport './js/scroll-to-top';\nimport './js/modal-film';\n","import { fetchAllGet } from './fetchAllGet';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/w500/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\nimport { checkThemeForDynamikEl } from './theme-switcher'; // for theme\n// console.log(varificationForDynamikEl);\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n// console.log(varificationForDynamikEl);\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nfetchAllGet(\n  BASE_UPCOMING_URL,\n  ENDPOINT_UPCOMING,\n  API_KEY,\n  '&language=en-US&page=1'\n)\n  .then(markUp)\n  .then(checkThemeForDynamikEl);\n\nasync function genreStr(arr) {\n    const data = await respGenre;\n    return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0]?.name).join(', ');\n    // const data = await respGenre;\n\n//   return arr\n//     .map(el => (el = data.data.genres.filter(({ id }) => id == el)[0]))\n//     .join('');\n}\n\nasync function markUp(data) {\n  const randCard = Math.floor(Math.random() * 20);\n  data.data.results.map(\n    async (\n      {\n        backdrop_path,\n        poster_path,\n        title,\n        original_title,\n        id,\n        release_date,\n        vote_average,\n        vote_count,\n        popularity,\n        overview,\n        genre_ids,\n      },\n      i\n    ) => {\n      if (i === randCard) {\n        const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div>\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div></div>\n                            <div class=\"month-item-title\">\n                                <h3 class=\"month-item-title-h3-main theme-dynamic-element theme-element\">${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3 class=\"month-item-title-h3 theme-dynamic-element theme-element\">Release date<span class=\"month-rel-date\">${release_date.replaceAll(\n                                          '-',\n                                          '.'\n                                        )}</span></h3>\n                                        <h3 class=\"month-item-title-h3 theme-dynamic-element theme-element\">Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count}</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3 class=\"month-item-title-h3 theme-dynamic-element theme-element\">Popularity<span class=\"month-popular\">${parseFloat(\n                                          popularity\n                                        ).toFixed(1)}</span></h3>\n                                        <h3 class=\"month-item-title-h3 theme-dynamic-element theme-element\">Genre<span class=\"month-genre\">${await genreStr(\n                                          genre_ids\n                                        )}</span></h3>\n                                    </div>\n                                </div>\n                                <p class=\"month-item-p theme-dynamic-element theme-element\">About</p><span class=\"month-text theme-dynamic-element theme-element\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn theme-dynamic-element theme-element button-light\">${textBtn(\n                                  id\n                                )}</button>\n                            </div>\n                         </div>`;\n\n        refs.monthGalery.insertAdjacentHTML('beforeend', str);\n        refs.monthBtn = document.querySelector('.month-btn');\n        refs.monthItem = document.querySelector('.month-item');\n        refs.monthBtn.addEventListener('click', handlerBtn);\n      }\n    }\n  );\n}\n\nfunction textBtn(id) {\n  const idFilm = {\n    id: [],\n  };\n  if (localStorage.getItem('favoriteFilm')) {\n    idFilm.id = [...JSON.parse(localStorage.getItem('favoriteFilm')).id];\n  }\n  return !idFilm.id.includes(id.toString())\n    ? 'Add to my library'\n    : 'Remove from my library';\n}\n\nfunction handlerBtn(e) {\n  e.preventDefault();\n  const id = refs.monthItem.getAttribute('id');\n  const idFilm = {\n    id: [],\n  };\n  if (localStorage.getItem('favoriteFilm')) {\n    idFilm.id = [...JSON.parse(localStorage.getItem('favoriteFilm')).id];\n  }\n  if (!idFilm.id.includes(id)) {\n    if (e.currentTarget.textContent === 'Add to my library') {\n      e.currentTarget.textContent = 'Remove from  my library';\n    }\n    idFilm.id.push(id);\n    localStorage.setItem('favoriteFilm', JSON.stringify(idFilm));\n  } else {\n    idFilm.id.splice(idFilm.id.indexOf(id), 1);\n    localStorage.setItem('favoriteFilm', JSON.stringify(idFilm));\n    e.currentTarget.textContent = 'Add to my library';\n  }\n}\n\nexport { genreStr };\n","import axios from 'axios';\nimport { refs } from './refs';\nimport ratingStarFull from '../images/reitingfull.svg';\nimport { genreStr } from './month';\nimport { handlerClickcardsSectionBackphoto } from './modal-film';\nimport starIconFull from '../images/reitingfull.svg';\nimport starIconHalf from '../images/reitinghalf.svg';\nimport starIconZero from '../images/reitingzero.svg';\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nlet originalData = [];\n\nconst randomIndex = Math.floor((1 + Math.random()) * 10);\nfetchTrendsOfWeek();\nasync function fetchTrendsOfWeek() {\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=${randomIndex}`\n  );\n  console.log(randomIndex);\n  originalData = response.data.results;\n  handleResponsive(originalData);\n  console.log(originalData);\n  return originalData;\n}\n// window.addEventListener('resize', handleResponsive);\nfunction handleResponsive() {\n  const screenWidth = window.innerWidth;\n  let slicedData = [];\n  console.log(slicedData);\n  // if (screenWidth < 768) {\n  //   return (slicedData = originalData.slice(0, 1));\n  // }\n  // slicedData = originalData.slice(0, 3);\n  slicedData = originalData.slice(0, 3);\n  createMarkup(slicedData);\n}\n\n// fetchTrendsOfWeek();\n\nexport { fetchTrendsOfWeek };\n\nasync function createMarkup(data) {\n  console.log(data);\n  data.map(\n    async (\n      {\n        name,\n        original_title,\n        poster_path,\n        vote_average,\n        genre_ids,\n        release_date,\n        id,\n      },\n      i\n    ) => {\n      const starRatingNumber = Number(vote_average);\n      const starRatingRound = Math.round(starRatingNumber);\n      const genresLine = await genreStr(genre_ids);\n\n      let starIcons = '';\n      for (let i = 1; i <= 5; i++) {\n        let dubbleI = i * 2;\n        if (dubbleI <= starRatingRound) {\n          starIcons += `<img class=\"card-vote-icon\" src=\"${starIconFull}\" alt=\"Rating Stars\" />`;\n        } else if (dubbleI % starRatingRound === 1) {\n          starIcons += `<img class=\"card-vote-icon\" src=\"${starIconHalf}\" alt=\"Rating Stars\" />`;\n        } else {\n          starIcons += `<img class=\"card-vote-icon\" src=\"${starIconZero}\" alt=\"Rating Stars\" />`;\n        }\n      }\n\n      const str = `\n        <a href=\"#\" class=\"card-film\" id=\"${id}\">\n          <div class=\"card-backdrop\"></div>\n          <img\n            class=\"card-img\"\n            src=\"https://image.tmdb.org/t/p/w500${poster_path || carta}\"\n            alt=\"\"\n            loading=\"lazy\"\n            srcset=\"\n              https://image.tmdb.org/t/p/w500${poster_path || carta} 1x,\n              https://image.tmdb.org/t/p/w500${poster_path || carta} 2x\n            \"\n          />\n          <div class=\"card-info-section\">\n            <h3 class=\"card-info-title\">${original_title || name}</h3>\n            <div class=\"card-info\">\n              <p class=\"card-info-text\">\n              ${genresLine} | ${String(release_date).slice(0, 4)}\n              </p>\n              <ul class=\"card-vote\">\n                ${starIcons}\n              </ul>\n            </div>\n          </div>\n        </a>\n      `;\n      refs.weeklyList.insertAdjacentHTML('beforeend', str);\n      if (data.length - 1 === i) {\n        refs.cardsSectionBackphoto = document.querySelectorAll('.card-film');\n        refs.cardsSectionBackphoto.forEach(el =>\n          el.addEventListener('click', handlerClickcardsSectionBackphoto)\n        );\n      }\n    }\n  );\n\n  //  list.insertAdjacentHTML('beforeend', cardMarkUp);\n\n  //   refs.cardsSectionBackphoto = document.querySelector('.card-film');\n  //   console.log(refs.cardsSectionBackphoto);\n  //   refs.cardsSectionBackphoto.forEach(el =>\n  //   el.addEventListener('click', handlerClickcardsSectionBackphoto)\n  // );\n}\n\n// function createMarkupCard(cardresult) {\n//   const cardMarkUp = cardresult.map(\n//     async (\n//       {\n//         original_title,\n//         poster_path,\n//         vote_average,\n//         genre_ids,\n//         release_date,\n//         id,\n//       },\n//       i\n//     ) => {\n//       const genresLine = await genreStr(genre_ids);\n//       const str = `<a href=\"#\" class=\"card-film\" id=\"${id}\">\n//         <div class=\"card-backdrop\"></div>\n//         <img\n//           class=\"card-img\"\n//           src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n//           alt=\"\"\n//           loading=\"lazy\"\n//           srcset=\"\n//             https://image.tmdb.org/t/p/w500${poster_path} 1x,\n//             https://image.tmdb.org/t/p/w500${poster_path} 2x\n//           \"\n//         />\n//         <div class=\"card-info-section\">\n//           <h3 class=\"card-info-title\">${original_title}</h3>\n//           <div class=\"card-info\">\n//             <p class=\"card-info-text\">\n//             ${genresLine} | ${String(release_date).slice(0, 4)}\n//             </p>\n//             <ul class=\"card-vote\">\n//               <li class=\"card-vote-items\">\n//                 <img\n//                   class=\"card-vote-icon\"\n//                   src=\"${ratingStarFull}\"\n//                   alt=\"Rating Stars\"\n//                 />\n//               </li>\n//               <li class=\"card-vote-items\">\n//                 <img\n//                   class=\"card-vote-icon\"\n//                   src=\"${ratingStarFull}\"\n//                   alt=\"Rating Stars\"\n//                 />\n//               </li>\n//               <li class=\"card-vote-items\">\n//                 <img\n//                   class=\"card-vote-icon\"\n//                   src=\"${ratingStarFull}\"\n//                   alt=\"Rating Stars\"\n//                 />\n//               </li>\n//               <li class=\"card-vote-items\">\n//                 <img\n//                   class=\"card-vote-icon\"\n//                   src=\"${ratingStarFull}\"\n//                   alt=\"Rating Stars\"\n//                 />\n//               </li>\n//               <li class=\"card-vote-items\">\n//                 <img\n//                   class=\"card-vote-icon\"\n//                   src=\"${ratingStarFull}\"\n//                   alt=\"Rating Stars\"\n//                 />\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </a>`;\n//       refs.weeklyList.insertAdjacentHTML('beforeend', str);\n//       if (2 === i) {\n//         refs.cardsSectionBackphoto = document.querySelectorAll('.card-film');\n//         refs.cardsSectionBackphoto.forEach(el =>\n//           el.addEventListener('click', handlerClickcardsSectionBackphoto)\n//         );\n//       }\n//     }\n//   );\n\n//   // refs.weeklyList.insertAdjacentHTML('beforeend', cardMarkUp);\n// }\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k0qvN\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bLI2f\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kzUqJ\")).toString();"],"names":["parcelRequire","register","JSON","parse","$h4A4X","$46a31d57eb81e4f1$var$respGenre","fetchAllGet","async","$46a31d57eb81e4f1$export$ba47833774196c98","arr","data","map","el","ref","genres","filter","id","name","join","$46a31d57eb81e4f1$var$handlerBtn","e","preventDefault","$krGWQ","refs","monthItem","getAttribute","idFilm","localStorage","getItem","includes","splice","indexOf","setItem","stringify","currentTarget","textContent","push","then","randCard","Math","floor","random","results","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","i","str","replaceAll","parseFloat","toFixed","toString","$46a31d57eb81e4f1$var$textBtn","monthGalery","insertAdjacentHTML","monthBtn","document","querySelector","addEventListener","$brr8Z","checkThemeForDynamikEl","$2shzp","$eff29e3f6e548ee8$exports","URL","resolve","import","meta","url","$e6022c74f6fa40dc$exports","$8588c92ca06d46b7$exports","$c10c282de78da56f$var$originalData","$c10c282de78da56f$var$randomIndex","response","default","get","console","log","window","innerWidth","slicedData","slice","starRatingNumber","Number","starRatingRound","round","genresLine","starIcons","i1","dubbleI","$parcel$interopDefault","carta","String","weeklyList","length","cardsSectionBackphoto","querySelectorAll","forEach","$fQE3M","handlerClickcardsSectionBackphoto","$c10c282de78da56f$var$createMarkup","$c10c282de78da56f$var$handleResponsive","$c10c282de78da56f$export$93a1f08ed04db2b3"],"version":3,"file":"index.665bb4c1.js.map"}