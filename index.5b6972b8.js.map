{"mappings":"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","sources":["src/js/fetchAllGetNew.js","src/js/refs.js","src/js/month.js","src/js/fetchAllGet.js","src/js/hero.js"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchAllGet(BASE_URL, ENDPOINT='', API_KEY='', QUERY='') {\n        const hero_film = await axios.get(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&${QUERY}`);\n        return hero_film;\n    }\nexport { fetchAllGet };","export const refs = {\n  menuBtn: document.querySelector('[data-menu-open]'),\n  menuContainer: document.querySelector('data-menu'),\n  menuBackdrop: document.querySelector('[data-backdrop]'),\n  body: document.querySelector('body'),\n/*----------------------------HERO--------------------------*/\nhomeHeroFilmWraper: document.querySelector('.hero-content'),\nheroTrailerBtn: document.querySelector('.hero-trailer-btn'),\ngoToCatalogBtn: document.querySelector('.go-to-catalog-btn'),\nhomeHero: document.querySelector('.home-hero'),\n\n/*----------------------------UPCOMING THIS MONTH--------------------------*/\nmonthGalery: document.querySelector('.monthgalery'),\n};\n","\n// import axios from 'axios';\nimport {fetchAllGet} from './fetchAllGetNew';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/w500/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nfetchAllGet(BASE_UPCOMING_URL, ENDPOINT_UPCOMING, API_KEY,'&language=en-US&page=1')\n.then(markUp);\n\nasync function genreStr(arr){\n        const data = await respGenre;\n        return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0].name).join(' ');\n      \n }\n\nasync function markUp(data){\n    \n    const randCard = Math.floor(Math.random() * 20);\n    // console.log(data.data.results);\n    data.data.results.map(async ({backdrop_path, poster_path, title, original_title, id, release_date, vote_average, vote_count, popularity, overview, genre_ids},i)=>{\n        // <img src=\"${BASE_IMG_URL}${backdrop_path}\" alt=\"${original_title}\" width=\"805\">\n        if (i===randCard)\n        {\n            const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div>\n                            <div class=\"month-item-title\">\n                                <h3>${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3>Release date<span class=\"month-rel-date\">${release_date.replaceAll('-','.')}</span></h3>\n                                        <h3>Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count }</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3>Popularity<span class=\"month-popular\">${parseFloat(popularity).toFixed(1)}</span></h3>\n                                        <h3>Genre<span class=\"month-genre\">${await genreStr(genre_ids)}</span></h3>\n                                    </div>\n                                </div>\n                                <p>About</p><span class=\"month-text\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn\">${textBtn(id)}</button>\n                            </div>\n                         </div>`;\n            refs.monthGalery.insertAdjacentHTML('beforeend', str);\n            refs.monthBtn = document.querySelector('.month-btn');\n            refs.monthItem = document.querySelector('.month-item');\n            refs.monthBtn.addEventListener('click', handlerBtn);\n        }\n    });\n      \n}\n\nfunction textBtn(id){\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    return !idFilm.id.includes(id.toString()) ? 'Add to my library' : 'Remove from my library';\n}\n\nfunction handlerBtn(e){\n    e.preventDefault();\n    const id = refs.monthItem.getAttribute('id');\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    if(!idFilm.id.includes(id)){\n        if(e.currentTarget.textContent === 'Add to my library'){e.currentTarget.textContent = 'Remove from  my library';}\n        idFilm.id.push(id);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n    }else {\n        idFilm.id.splice(idFilm.id.indexOf(id),1);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n        e.currentTarget.textContent = 'Add to my library';\n    }\n    \n    \n}","import axios from 'axios';\n\nasync function serviceFilm() {\n    const BASE_URL = \"https://api.themoviedb.org/3\";\n    const ENDPOINT = \"/trending/movie/day\";\n    const API_KEY = \"5bf13f442a6612ea903461e28536fdca\";\n\n    const heroFilm = await axios.get(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}`);\n\n    return heroFilm;\n    ;\n}\nexport { serviceFilm };","import axios from \"axios\";\nimport { serviceFilm } from \"./fetchAllGet\";\nimport { refs } from \"./refs\";\n/*async function serviceFilm() {\n    const BASE_URL = \"https://api.themoviedb.org/3\";\n    const ENDPOINT = \"/trending/movie/day\";\n    const API_KEY = \"5bf13f442a6612ea903461e28536fdca\";\n\n    const hero_film = await axios.get(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}`);\n\n    return hero_film;\n    ;\n}\nexport { serviceFilm };*/\n\n\n\nserviceFilm()\n    .then(data => {\n        const firstFilm = (data.data.results)[0];\n        console.log(firstFilm);\n        if (!firstFilm) {\n            refs.homeHero.classList.remove('is-hidden');\n        }\n        refs.homeHeroFilmWraper.insertAdjacentHTML('beforeend', createMarkup(firstFilm));\n\n        refs.homeHero.classList.add('is-hidden');\n\n        refs.heroTrailerBtn.setAttribute(\"id\", `${firstFilm.id}`);\n        refs.goToCatalogBtn.setAttribute(\"id\", `${firstFilm.id}`);\n    })\n    .catch(err => console.log(err))\n\n/*function createMarkup(arr) {\n    return arr.map(({ original_title, poster_path, vote_average, overview }) => \n    `<div>\n    <img src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${original_title}\">\n    <h2>${original_title}</h2>\n    <p>${overview}</p>\n    <p>${vote_average}</p>\n    </div>`).join('')\n    \n}*/\n\nfunction createMarkup({ original_title, poster_path, vote_average, overview}) {\n    return `<div class = \"home-hero-film\" >\n    <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\" class = \"home-hero-poster\">\n    <h2 class = \"home-hero-title\">${original_title}</h2>\n    <p class = \"home-hero-overview\">${overview}</p>\n    <p class = \"home-hero-rate\">${vote_average}</p>\n    </div>`\n}\n\n"],"names":["$2shzp","parcelRequire","async","$ed2881eb41d6a8a5$export$e9cd33bc6cfee51b","BASE_URL","ENDPOINT","API_KEY","QUERY","default","get","$ee27a4d7c64fc8c4$export$21666b427502ea6d","menuBtn","document","querySelector","menuContainer","menuBackdrop","body","homeHeroFilmWraper","heroTrailerBtn","goToCatalogBtn","homeHero","monthGalery","$46a31d57eb81e4f1$var$respGenre","$46a31d57eb81e4f1$var$handlerBtn","e","preventDefault","id","monthItem","getAttribute","idFilm","localStorage","getItem","JSON","parse","includes","splice","indexOf","setItem","stringify","currentTarget","textContent","push","then","data","randCard","Math","floor","random","results","map","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","i","str","replaceAll","parseFloat","toFixed","arr","el","genres","filter","name","join","$46a31d57eb81e4f1$var$genreStr","toString","$46a31d57eb81e4f1$var$textBtn","insertAdjacentHTML","monthBtn","addEventListener","firstFilm","console","log","classList","remove","$aab6d1c60b3e9a0a$var$createMarkup","add","setAttribute","catch","err"],"version":3,"file":"index.5b6972b8.js.map"}