{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,S,oDAIMC,EAAe,uCACfC,EAAoB,uCAIpBC,EAAU,mCAGVC,GAAY,EAAAC,EAAAC,aAVK,6BACA,sBASuCH,EAAS,IAEvE,GAAII,aAAaC,QAAQ,SAAS,CAC9B,IAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,MAAMC,YAAY,wBAAyB,WAChDJ,EAAKG,MAAMC,YAAY,uBAAwB,WAC/CJ,EAAKG,MAAMC,YAAY,4BAA6B,WACpDJ,EAAKG,MAAMC,YAAY,uBAAwB,U,UAMpCC,EAASC,G,OAATC,EAAQC,MAAAC,KAAAC,U,UAARH,I,OAAAA,EAAfI,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,EAAwBR,G,IACVS,E,kFAAapB,E,cAAboB,EAAIC,EAAAC,K,kBACHX,EAAIY,KAAI,SAACC,G,OAAKA,EAAKJ,EAAKA,KAAKK,OAAOC,QAAO,SAAAC,G,OAAIA,EAAFC,IAAYJ,C,IAAI,GAAGK,I,IAAMC,KAAK,O,4CAFnEjB,MAAAC,KAAAC,U,UAMRgB,I,OAAAA,EAAff,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAc,EAAsBZ,G,IAEZa,E,kEAAAA,EAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,UACjChB,EAAKA,KAAKiB,QAAQd,IAAG,W,MAACP,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,EAAAQ,EAAwIW,G,IAAhIC,EAAeC,EAAaC,EAAOC,EAAgBd,EAAIe,EAAcC,EAAcC,EAAYC,EAAYC,EAAUC,EAIrIC,E,qEAJgBV,EAAaZ,EAAbY,cAAeC,EAAWb,EAAXa,YAAaC,EAAKd,EAALc,MAAOC,EAAcf,EAAde,eAAgBd,EAAED,EAAFC,GAAIe,EAAYhB,EAAZgB,aAAcC,EAAYjB,EAAZiB,aAAcC,EAAUlB,EAAVkB,WAAYC,EAAUnB,EAAVmB,WAAYC,EAAQpB,EAARoB,SAAUC,EAASrB,EAATqB,UAC3IV,IAAIL,EAAQ,C,4BAGA,+BAI8BiB,OAJCtB,EAAG,oMAIWsB,OAAfrD,GACNqD,OADqBX,EAAc,8FACfW,OAApBpD,GAAyCoD,OAArBV,EAAY,WAI1CU,OAJmDR,EAAe,+LAOjBQ,OAHjDT,EAAM,gNAOuCS,OAJIP,EAAaQ,WAC1D,IACA,KACA,mGAC4FD,OAAnDN,EAAa,wCAGZM,OAHkDL,EAAW,2LAMpEK,OAHOE,WAC1CN,GACAO,QAAQ,GAAG,6F,SAC8B3C,EACzCsC,G,mBAvBxBC,EAAM5B,EAAAiC,GA2B+CJ,OAAQK,KAAAlC,EAAAiC,GAAAjC,EAAAmC,GAHrC,2KAI6CN,OADhBH,EAAS,kGAG9CG,OAFqDO,EACrD7B,GACA,kFAItB8B,EAAAC,KAAKC,YAAYC,mBAAmB,YAAaZ,GACjDS,EAAAC,KAAKG,SAAWxD,SAASC,cAAc,cACvCmD,EAAAC,KAAKI,UAAYzD,SAASC,cAAc,eACxCmD,EAAAC,KAAKG,SAASE,iBAAiB,QAASC,G,8DAzC8G3B,G,gCAAzI,I,2CAHVP,EAAMlB,MAAAC,KAAAC,U,CAmDrB,SAAS0C,EAAQ7B,GACb,IAAMsC,EAAQ,CACVtC,GAAI,IAMR,OAJIzB,aAAaC,QAAQ,kBACrB8D,EAAOtC,GAAMZ,EAAAmD,EAAA,CAAGC,KAAKC,MAAMlE,aAAaC,QAAQ,iBAAiBwB,KAG7DsC,EAAOtC,GAAG0C,SAAS1C,EAAG2C,YAAoC,yBAAtB,mB,CAGhD,SAASN,EAAWO,GAChBA,EAAEC,iBACF,IAAM7C,EAAK8B,EAAAC,KAAKI,UAAUW,aAAa,MACjCR,EAAQ,CACVtC,GAAI,IAEJzB,aAAaC,QAAQ,kBACrB8D,EAAOtC,GAAMZ,EAAAmD,EAAA,CAAGC,KAAKC,MAAMlE,aAAaC,QAAQ,iBAAiBwB,KAGjEsC,EAAOtC,GAAG0C,SAAS1C,IAKnBsC,EAAOtC,GAAG+C,OAAOT,EAAOtC,GAAGgD,QAAQhD,GAAI,GACvCzB,aAAa0E,QAAQ,eAAgBT,KAAKU,UAAUZ,IACpDM,EAAEO,cAAcC,YAAc,sBANK,sBAAhCR,EAAEO,cAAcC,cAAqCR,EAAEO,cAAcC,YAAc,2BACtFd,EAAOtC,GAAGqD,KAAKrD,GACfzB,aAAa0E,QAAQ,eAAgBT,KAAKU,UAAUZ,I,EApF5D,EAAAjE,EAAAC,aAhB0B,6BACA,oBAewBH,EAAQ,0BACzDmF,M,SAQqB9D,G,OAAPW,EAAMlB,MAAAC,KAAAC,U,gDCjCrBpB,EAAAC,EAAA,S,aAAA,I,aCAA,SAASuF,EAAiBC,GA+CxB,OA/CwBA,EAAEC,WAEvB9D,KACC,SAAAI,G,IACEe,EAAcf,EAAde,eACAF,EAAWb,EAAXa,YAEAQ,GADYrB,EAAZiB,aACSjB,EAATqB,WACAL,EAAYhB,EAAZgB,aACAf,EAAED,EAAFC,G,MAEA,0GAAgIsB,OAAvBV,EAAY,cAEpFU,OAF+FtB,EAAG,qFAGnGsB,OADCR,EAAe,gDACDQ,OAAfP,GAAyBO,OAAVF,EAAU,urC,IAgC5DlB,KAAK,G,kBD1CJwD,EAAU,mCACVC,EAAW,iDAEbC,EAAe,G,SAEJC,I,OAAAA,EAAfzE,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,I,IACQuE,E,kFAAiBC,EAAAC,QAAMC,IAC3B,GAAuB3C,OAApBqC,EAAS,aAAmBrC,OAARoC,EAAQ,gC,cAD3BI,EAAQrE,EAAAC,KAGdkE,EAAeE,EAAStE,KAAKiB,Q,SACvByD,I,cACNC,OAAO/B,iBAAiB,SAAU8B,G,kBAC3BN,G,4CAPuB3E,MAAAC,KAAAC,U,UAUjB+E,I,OAAAE,EAAgBnF,MAAAC,KAAAC,U,UAAhBiF,I,OAAAA,EAAfhF,EAAArB,EAAA,CAAAqB,EAAAC,GAAAC,MAAA,SAAAC,I,IACQ8E,EACFC,E,kEADED,EAAcF,OAAOI,WAIzBD,EADED,EAAc,IACHT,EAAaY,MAAM,EAAG,GAEtBZ,EAAaY,MAAM,EAAG,GAGrC1C,EAAAC,KAAK0C,WAAWC,UAAYnB,EAAiBe,G,4CAVhBrF,MAAAC,KAAAC,U,aAVhB0E,EAAiB5E,MAAAC,KAAAC,U,CAuBhCwF,G","sources":["src/js/month.js","src/js/weekly.js","src/js/createMarkupCard.js"],"sourcesContent":["\n// import axios from 'axios';\nimport {fetchAllGet} from './fetchAllGet';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/original/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nif (localStorage.getItem(\"theme\")){\n    const root = document.querySelector(':root');\n    root.style.setProperty('--primary-title-color', '#111111');\n    root.style.setProperty('--primary-vote-color', '#111111');\n    root.style.setProperty('--primary-vote-color-text', '#282828');\n    root.style.setProperty('--primary-about-text', '#282828');\n} \n\nfetchAllGet(BASE_UPCOMING_URL, ENDPOINT_UPCOMING, API_KEY,'&language=en-US&page=1')\n.then(markUp);\n\nasync function genreStr(arr){\n        const data = await respGenre;\n        return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0].name).join(', ');\n      \n }\n\nasync function markUp(data){\n    \n    const randCard = Math.floor(Math.random() * 20);\n    data.data.results.map(async ({backdrop_path, poster_path, title, original_title, id, release_date, vote_average, vote_count, popularity, overview, genre_ids},i)=>{\n        if (i===randCard)\n        {\n            \n            const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div>\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div></div>\n                            <div class=\"month-item-title\">\n                                <h3>${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3>Release date<span class=\"month-rel-date\">${release_date.replaceAll(\n                                          '-',\n                                          '.'\n                                        )}</span></h3>\n                                        <h3>Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count}</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3>Popularity<span class=\"month-popular\">${parseFloat(\n                                          popularity\n                                        ).toFixed(1)}</span></h3>\n                                        <h3>Genre<span class=\"month-genre\">${await genreStr(\n                                          genre_ids\n                                        )}</span></h3>\n                                    </div>\n                                </div>\n                                <p>About</p><span class=\"month-text\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn button-light\">${textBtn(\n                                  id\n                                )}</button>\n                            </div>\n                         </div>`;\n                        \n            refs.monthGalery.insertAdjacentHTML('beforeend', str);\n            refs.monthBtn = document.querySelector('.month-btn');\n            refs.monthItem = document.querySelector('.month-item');\n            refs.monthBtn.addEventListener('click', handlerBtn);\n            \n        }\n    });\n      \n}\n\nfunction textBtn(id){\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    return !idFilm.id.includes(id.toString()) ? 'Add to my library' : 'Remove from my library';\n}\n\nfunction handlerBtn(e){\n    e.preventDefault();\n    const id = refs.monthItem.getAttribute('id');\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    if(!idFilm.id.includes(id)){\n        if(e.currentTarget.textContent === 'Add to my library'){e.currentTarget.textContent = 'Remove from  my library';}\n        idFilm.id.push(id);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n    }else {\n        idFilm.id.splice(idFilm.id.indexOf(id),1);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n        e.currentTarget.textContent = 'Add to my library';\n    }\n    \n    \n}","import axios from 'axios';\nimport { createMarkupCard } from './createMarkupCard';\nimport { refs } from './refs';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nlet originalData = [];\n\nasync function fetchTrendsOfWeek() {\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&per_page=20`\n  );\n  originalData = response.data.results;\n  await handleResponsive();\n  window.addEventListener('resize', handleResponsive);\n  return originalData;\n}\n\nasync function handleResponsive() {\n  const screenWidth = window.innerWidth;\n  let slicedData;\n\n  if (screenWidth < 768) {\n    slicedData = originalData.slice(0, 1);\n  } else {\n    slicedData = originalData.slice(0, 3);\n  }\n\n  refs.weeklyList.innerHTML = createMarkupCard(slicedData);\n}\n\nfetchTrendsOfWeek();\n\nexport { fetchTrendsOfWeek };\n","function createMarkupCard({ cardresult }) {\n  const cardMarkUp = cardresult\n    .map(\n      ({\n        original_title,\n        poster_path,\n        vote_average,\n        genre_ids,\n        release_date,\n        id,\n      }) =>\n        `<div class=\"cards-section-backphoto\" style=\"background-image: url('https://image.tmdb.org/t/p/original${poster_path}');\" id=\"${id}\">\n    <div class=\"info-cards-section\">\n    <p class=\"info-card-section-title\">${original_title}</p>\n    <p class=\"info-card-section-date\">${release_date}${genre_ids}</p>\n    </div>\n    <div class=\"vote-average-section\">\n    <ul class=\"vote-average-icons\">\n          <li class=\"vote-average-icons-items\">\n            <svg width=\"16.87px\" height=\"15.75px\" class=\"vote-average-icons-items-img\">\n              <use href=\"/src/images/symbol-defs.svg#icon-empty-star\">\n              </use>\n            </svg>\n          </li>\n          <li class=\"vote-average-icons-items\">\n            <svg width=\"16.87px\" height=\"15.75px\" class=\"vote-average-icons-items-img\">\n              <use href=\"/src/images/symbol-defs.svg#icon-empty-star\">\n              </use>\n            </svg>\n          </li>\n          <li class=\"vote-average-icons-items\">\n            <svg width=\"16.87px\" height=\"15.75px\" class=\"vote-average-icons-items-img\">\n              <use href=\"/src/images/symbol-defs.svg#icon-empty-star\">\n              </use>\n            </svg>\n          </li>\n          <li class=\"vote-average-icons-items\">\n            <svg width=\"16.87px\" height=\"15.75px\" class=\"vote-average-icons-items-img\">\n              <use href=\"/src/images/symbol-defs.svg#icon-empty-star\">\n              </use>\n            </svg>\n          </li>\n    </ul>\n    </div>\n    </div>`\n    )\n    .join('');\n  return cardMarkUp;\n}\n\nexport { createMarkupCard };\n"],"names":["$bpxeT","parcelRequire","$1b91ffc64d36c7b6$var$BASE_IMG_URL","$1b91ffc64d36c7b6$var$BASE_IMG_URL_w500","$1b91ffc64d36c7b6$var$API_KEY","$1b91ffc64d36c7b6$var$respGenre","$2SxBx","fetchAllGet","localStorage","getItem","$1b91ffc64d36c7b6$var$root","document","querySelector","style","setProperty","$1b91ffc64d36c7b6$var$genreStr","arr","$1b91ffc64d36c7b6$var$_genreStr","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","_ctx","sent","map","el","genres","filter","param","id","name","join","$1b91ffc64d36c7b6$var$_markUp","_callee1","randCard","Math","floor","random","results","i","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","str","concat","replaceAll","parseFloat","toFixed","t0","call","t1","$1b91ffc64d36c7b6$var$textBtn","$4Nugj","refs","monthGalery","insertAdjacentHTML","monthBtn","monthItem","addEventListener","$1b91ffc64d36c7b6$var$handlerBtn","idFilm","$8nrFW","JSON","parse","includes","toString","e","preventDefault","getAttribute","splice","indexOf","setItem","stringify","currentTarget","textContent","push","then","$cfbb91401ffb7d88$export$98f2023ceafec56e","param1","cardresult","$7efa00ec3586167e$var$API_KEY","$7efa00ec3586167e$var$BASE_URL","$7efa00ec3586167e$var$originalData","$7efa00ec3586167e$var$_fetchTrendsOfWeek","response","$dIxxU","default","get","$7efa00ec3586167e$var$handleResponsive","window","$7efa00ec3586167e$var$_handleResponsive","screenWidth","slicedData","innerWidth","slice","weeklyList","innerHTML","$7efa00ec3586167e$export$93a1f08ed04db2b3"],"version":3,"file":"index.e374f3d6.js.map"}