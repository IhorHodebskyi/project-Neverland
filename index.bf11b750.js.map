{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-0181af820356d3f7.js","src/index.js","src/js/month.js","src/js/weekly.js","node_modules/@parcel/runtime-js/lib/runtime-555eb7fbb66441c4.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.bf11b750.js\\\",\\\"k0qvN\\\":\\\"reitingfull.b145141b.svg\\\",\\\"eunLf\\\":\\\"catalog.8d866aa6.css\\\",\\\"7adTC\\\":\\\"library.524b8208.js\\\"}\"));","import './js/pre-loader-spinner';\nimport './js/month';\nimport './js/hero';\nimport './js/mobile-menu';\nimport './js/activMenu';\nimport './js/theme-switcher';\nimport './js/weekly';\nimport './js/modal-trailer';\nimport './js/modal-footer';\nimport './js/scroll-to-top';\nimport './js/modal-film';\n","import {fetchAllGet} from './fetchAllGet';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/w500/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nif (localStorage.getItem(\"theme\")){\n    const root = document.querySelector(':root');\n    root.style.setProperty('--primary-title-color', '#111111');\n    root.style.setProperty('--primary-vote-color', '#111111');\n    root.style.setProperty('--primary-vote-color-text', '#282828');\n    root.style.setProperty('--primary-about-text', '#282828');\n} \n\nfetchAllGet(BASE_UPCOMING_URL, ENDPOINT_UPCOMING, API_KEY,'&language=en-US&page=1')\n.then(markUp);\n\nasync function genreStr(arr){\n        const data = await respGenre;\n        return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0]?.name).join(', ');\n      \n }\n\nasync function markUp(data){\n    \n    const randCard = Math.floor(Math.random() * 20);\n    data.data.results.map(async ({backdrop_path, poster_path, title, original_title, id, release_date, vote_average, vote_count, popularity, overview, genre_ids},i)=>{\n        if (i===randCard)\n        {\n            \n            const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div>\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div></div>\n                            <div class=\"month-item-title\">\n                                <h3>${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3>Release date<span class=\"month-rel-date\">${release_date.replaceAll(\n                                          '-',\n                                          '.'\n                                        )}</span></h3>\n                                        <h3>Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count}</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3>Popularity<span class=\"month-popular\">${parseFloat(\n                                          popularity\n                                        ).toFixed(1)}</span></h3>\n                                        <h3>Genre<span class=\"month-genre\">${await genreStr(\n                                          genre_ids\n                                        )}</span></h3>\n                                    </div>\n                                </div>\n                                <p>About</p><span class=\"month-text\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn button-light\">${textBtn(\n                                  id\n                                )}</button>\n                            </div>\n                         </div>`;\n                        \n            refs.monthGalery.insertAdjacentHTML('beforeend', str);\n            refs.monthBtn = document.querySelector('.month-btn');\n            refs.monthItem = document.querySelector('.month-item');\n            refs.monthBtn.addEventListener('click', handlerBtn);\n            \n        }\n    });\n      \n}\n\nfunction textBtn(id){\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    return !idFilm.id.includes(id.toString()) ? 'Add to my library' : 'Remove from my library';\n}\n\nfunction handlerBtn(e){\n    e.preventDefault();\n    const id = refs.monthItem.getAttribute('id');\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    if(!idFilm.id.includes(id)){\n        if(e.currentTarget.textContent === 'Add to my library'){e.currentTarget.textContent = 'Remove from  my library';}\n        idFilm.id.push(id);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n    }else {\n        idFilm.id.splice(idFilm.id.indexOf(id),1);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n        e.currentTarget.textContent = 'Add to my library';\n    }\n    \n    \n}\n\nexport { genreStr }","import axios from 'axios';\nimport { refs } from './refs';\nimport ratingStarFull from '../images/reitingfull.svg';\nimport { genreStr } from './month';\nimport { handlerClickcardsSectionBackphoto } from './modal-film';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nlet originalData = [];\nconst randomIndex = Math.floor(Math.random() * 100);\n\nasync function fetchTrendsOfWeek() {\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=${randomIndex}`\n  );\n  console.log(randomIndex);\n  originalData = response.data.results;\n  handleResponsive();\n\n  return originalData;\n}\n// window.addEventListener('resize', handleResponsive);\nfunction handleResponsive() {\n  const screenWidth = window.innerWidth;\n  let slicedData = [];\n  console.log(slicedData);\n  // if (screenWidth < 768) {\n  //   return (slicedData = originalData.slice(0, 1));\n  // }\n  // slicedData = originalData.slice(0, 3);\n  slicedData = originalData.slice(0, 3);\n  createMarkupCard(slicedData);\n}\n\nfetchTrendsOfWeek();\n\nexport { fetchTrendsOfWeek };\n\nfunction createMarkupCard(cardresult) {\n  const cardMarkUp = cardresult\n    .map(\n      async({\n        original_title,\n        poster_path,\n        vote_average,\n        genre_ids,\n        release_date,\n        id,\n      }, i) =>{\n        const genresLine = await genreStr(genre_ids); \n        const str =`<a href=\"#\" class=\"card-film\" id=\"${id}\">\n        <div class=\"card-backdrop\"></div>\n        <img\n          class=\"card-img\"\n          src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n          alt=\"\"\n          loading=\"lazy\"\n          srcset=\"\n            https://image.tmdb.org/t/p/w500${poster_path} 1x,\n            https://image.tmdb.org/t/p/w500${poster_path} 2x\n          \"\n        />\n        <div class=\"card-info-section\">\n          <h3 class=\"card-info-title\">${original_title}</h3>\n          <div class=\"card-info\">\n            <p class=\"card-info-text\">\n            ${genresLine} | ${String(release_date).slice(0, 4)}\n            </p>\n            <ul class=\"card-vote\">\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"${ratingStarFull}\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"${ratingStarFull}\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"${ratingStarFull}\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"${ratingStarFull}\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"${ratingStarFull}\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </a>`;\n      refs.weeklyList.insertAdjacentHTML('beforeend', str);\n      if (2 === i){\n        refs.cardsSectionBackphoto = document.querySelectorAll('.card-film');\n        refs.cardsSectionBackphoto.forEach(el =>\n        el.addEventListener('click', handlerClickcardsSectionBackphoto)\n      );}\n      }\n    );\n      \n  // refs.weeklyList.insertAdjacentHTML('beforeend', cardMarkUp);\n\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k0qvN\")).toString();"],"names":["parcelRequire","register","JSON","parse","$h4A4X","$46a31d57eb81e4f1$var$respGenre","fetchAllGet","localStorage","getItem","root","document","querySelector","style","setProperty","async","$46a31d57eb81e4f1$export$ba47833774196c98","arr","data","map","el","ref","genres","filter","id","name","join","$46a31d57eb81e4f1$var$handlerBtn","e","preventDefault","$krGWQ","refs","monthItem","getAttribute","idFilm","includes","splice","indexOf","setItem","stringify","currentTarget","textContent","push","then","randCard","Math","floor","random","results","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","i","str","replaceAll","parseFloat","toFixed","toString","$46a31d57eb81e4f1$var$textBtn","monthGalery","insertAdjacentHTML","monthBtn","addEventListener","$2shzp","$eff29e3f6e548ee8$exports","URL","resolve","import","meta","url","$c10c282de78da56f$var$originalData","$c10c282de78da56f$var$randomIndex","response","default","get","console","log","window","innerWidth","slicedData","slice","cardresult","String","$parcel$interopDefault","weeklyList","cardsSectionBackphoto","querySelectorAll","forEach","$fQE3M","handlerClickcardsSectionBackphoto","$c10c282de78da56f$var$handleResponsive","$c10c282de78da56f$export$93a1f08ed04db2b3"],"version":3,"file":"index.bf11b750.js.map"}