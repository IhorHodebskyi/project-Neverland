{"mappings":"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","sources":["src/js/month.js","src/js/weekly.js"],"sourcesContent":["\n// import axios from 'axios';\nimport {fetchAllGet} from './fetchAllGet';\nimport { refs } from './refs';\nconst BASE_GENRE_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_GENRE = '/3/genre/movie/list';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst BASE_IMG_URL_w500 = 'https://image.tmdb.org/t/p/w500/';\nconst BASE_UPCOMING_URL = 'https://api.themoviedb.org';\nconst ENDPOINT_UPCOMING = '/3/movie/upcoming';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\n// '057e36269a3ddafbb398756699f3ba82';\n\nconst respGenre = fetchAllGet(BASE_GENRE_URL, ENDPOINT_GENRE, API_KEY, '');\n\nif (localStorage.getItem(\"theme\")){\n    const root = document.querySelector(':root');\n    root.style.setProperty('--primary-title-color', '#111111');\n    root.style.setProperty('--primary-vote-color', '#111111');\n    root.style.setProperty('--primary-vote-color-text', '#282828');\n    root.style.setProperty('--primary-about-text', '#282828');\n} \n\nfetchAllGet(BASE_UPCOMING_URL, ENDPOINT_UPCOMING, API_KEY,'&language=en-US&page=1')\n.then(markUp);\n\nasync function genreStr(arr){\n        const data = await respGenre;\n        return arr.map((el)=>el = data.data.genres.filter(({id})=>id == el)[0].name).join(', ');\n      \n }\n\nasync function markUp(data){\n    \n    const randCard = Math.floor(Math.random() * 20);\n    data.data.results.map(async ({backdrop_path, poster_path, title, original_title, id, release_date, vote_average, vote_count, popularity, overview, genre_ids},i)=>{\n        if (i===randCard)\n        {\n            \n            const str = `<div class=\"month-item\" id=\"${id}\">\n                            <div>\n                            <div class=\"month-item-img\">\n                                <picture>\n                                    <source srcset=\"${BASE_IMG_URL}${backdrop_path}\" media=\"(min-width: 768px)\" width=\"805\"/>\n                                    <img src=\"${BASE_IMG_URL_w500}${poster_path}\" alt=\"${original_title}\"/>\n                                </picture>\n                            </div></div>\n                            <div class=\"month-item-title\">\n                                <h3>${title}</h3>\n                                <div class=\"month-item-title-text\">\n                                    <div>\n                                        <h3>Release date<span class=\"month-rel-date\">${release_date.replaceAll(\n                                          '-',\n                                          '.'\n                                        )}</span></h3>\n                                        <h3>Vote / Votes<span class=\"month-vote\">${vote_average}</span> / <span class=\"month-votes\">${vote_count}</span></h3>\n                                    </div>\n                                    <div>\n                                        <h3>Popularity<span class=\"month-popular\">${parseFloat(\n                                          popularity\n                                        ).toFixed(1)}</span></h3>\n                                        <h3>Genre<span class=\"month-genre\">${await genreStr(\n                                          genre_ids\n                                        )}</span></h3>\n                                    </div>\n                                </div>\n                                <p>About</p><span class=\"month-text\">${overview}</span>\n                                <button type=\"submit\" class=\"month-btn button-light\">${textBtn(\n                                  id\n                                )}</button>\n                            </div>\n                         </div>`;\n                        \n            refs.monthGalery.insertAdjacentHTML('beforeend', str);\n            refs.monthBtn = document.querySelector('.month-btn');\n            refs.monthItem = document.querySelector('.month-item');\n            refs.monthBtn.addEventListener('click', handlerBtn);\n            \n        }\n    });\n      \n}\n\nfunction textBtn(id){\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    return !idFilm.id.includes(id.toString()) ? 'Add to my library' : 'Remove from my library';\n}\n\nfunction handlerBtn(e){\n    e.preventDefault();\n    const id = refs.monthItem.getAttribute('id');\n    const idFilm ={\n        id: []\n    }\n    if (localStorage.getItem(\"favoriteFilm\")){\n        idFilm.id = [...JSON.parse(localStorage.getItem(\"favoriteFilm\")).id];\n               \n    }\n    if(!idFilm.id.includes(id)){\n        if(e.currentTarget.textContent === 'Add to my library'){e.currentTarget.textContent = 'Remove from  my library';}\n        idFilm.id.push(id);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n    }else {\n        idFilm.id.splice(idFilm.id.indexOf(id),1);\n        localStorage.setItem(\"favoriteFilm\", JSON.stringify(idFilm));\n        e.currentTarget.textContent = 'Add to my library';\n    }\n    \n    \n}","import axios from 'axios';\n// import { createMarkupCard } from './createMarkupCard';\nimport { refs } from './refs';\n\nconst API_KEY = '5bf13f442a6612ea903461e28536fdca';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/all/week';\n\nlet originalData = [];\nconst randomIndex = Math.floor(Math.random() * 100);\n\nasync function fetchTrendsOfWeek() {\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=${randomIndex}`\n  );\n  console.log(randomIndex);\n  originalData = response.data.results;\n  handleResponsive();\n\n  return originalData;\n}\n// window.addEventListener('resize', handleResponsive);\nfunction handleResponsive() {\n  const screenWidth = window.innerWidth;\n  let slicedData = [];\n  console.log(slicedData);\n  // if (screenWidth < 768) {\n  //   return (slicedData = originalData.slice(0, 1));\n  // }\n  // slicedData = originalData.slice(0, 3);\n  slicedData = originalData.slice(0, 3);\n  createMarkupCard(slicedData);\n}\n\nfetchTrendsOfWeek();\n\nexport { fetchTrendsOfWeek };\n\nfunction createMarkupCard(cardresult) {\n  const cardMarkUp = cardresult\n    .map(\n      ({\n        original_title,\n        poster_path,\n        vote_average,\n        genre_ids,\n        release_date,\n        id,\n      }) =>\n        `<a href=\"#\" class=\"card-film\" id=\"${id}\">\n        <div class=\"card-backdrop\"></div>\n        <img\n          class=\"card-img\"\n          src=\"https://image.tmdb.org/t/p/w500${poster_path}\"\n          alt=\"\"\n          loading=\"lazy\"\n          srcset=\"\n            https://image.tmdb.org/t/p/w500${poster_path} 1x,\n            https://image.tmdb.org/t/p/w500${poster_path} 2x\n          \"\n        />\n        <div class=\"card-info-section\">\n          <h3 class=\"card-info-title\">${original_title}</h3>\n          <div class=\"card-info\">\n            <p class=\"card-info-text\">\n              ${String(release_date).slice(0, 4)} | ${genre_ids}\n            </p>\n            <ul class=\"card-vote\">\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n              <li class=\"card-vote-items\">\n                <img\n                  class=\"card-vote-icon\"\n                  src=\"../../images/reitingfull.svg\"\n                  alt=\"Rating Stars\"\n                />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </a>`\n    )\n    .join('');\n\n  refs.weeklyList.insertAdjacentHTML('beforeend', cardMarkUp);\n}\n"],"names":["$bpxeT","parcelRequire","$1b91ffc64d36c7b6$var$BASE_IMG_URL","$1b91ffc64d36c7b6$var$BASE_IMG_URL_w500","$1b91ffc64d36c7b6$var$API_KEY","$1b91ffc64d36c7b6$var$respGenre","$2SxBx","fetchAllGet","localStorage","getItem","$1b91ffc64d36c7b6$var$root","document","querySelector","style","setProperty","$1b91ffc64d36c7b6$var$genreStr","arr","$1b91ffc64d36c7b6$var$_genreStr","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","_ctx","sent","map","el","genres","filter","param","id","name","join","$1b91ffc64d36c7b6$var$_markUp","_callee1","randCard","Math","floor","random","results","i","backdrop_path","poster_path","title","original_title","release_date","vote_average","vote_count","popularity","overview","genre_ids","str","concat","replaceAll","parseFloat","toFixed","t0","call","t1","$1b91ffc64d36c7b6$var$textBtn","$4Nugj","refs","monthGalery","insertAdjacentHTML","monthBtn","monthItem","addEventListener","$1b91ffc64d36c7b6$var$handlerBtn","idFilm","$8nrFW","JSON","parse","includes","toString","e","preventDefault","getAttribute","splice","indexOf","setItem","stringify","currentTarget","textContent","push","then","$7efa00ec3586167e$var$API_KEY","$7efa00ec3586167e$var$BASE_URL","$7efa00ec3586167e$var$originalData","$7efa00ec3586167e$var$randomIndex","$7efa00ec3586167e$var$_fetchTrendsOfWeek","response","$dIxxU","default","get","console","log","$7efa00ec3586167e$var$handleResponsive","window","innerWidth","cardMarkUp","slicedData","slice","String","weeklyList","$7efa00ec3586167e$export$93a1f08ed04db2b3"],"version":3,"file":"index.c1f484bb.js.map"}